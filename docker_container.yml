parameters:
  Container_Name: ''
  Container_Version: '1.0.0'
  NewBuild: True
  Pool: 'windows-2019'

jobs:
  - job: dockerBuild
    pool:
      vmImage: ${{ parameters['Pool'] }}
    ${{ if parameters['dependsOn'] }}:
      dependsOn: ${{ parameters['dependsOn'] }}
    variables:
      dockerrepo: dynamicd/${{ parameters['Container_Name'] }}
      containerversion: ${{ parameters['Container_Version'] }}
      newBuild: ${{ parameters['NewBuild'] }}
      buildArgs: ${{ parameters['Build_Arguments'] }}
    steps:

      - task: Docker@2
        displayName: Login to DockerHub
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        inputs:
          command: login
          containerRegistry: DockerHub

      - task: Docker@2
        displayName: Build Container
        condition: and(succeeded(), or(eq(variables['newBuild'], 'True'), eq(variables['Build.Reason'], 'PullRequest')))
        inputs:
          command: build
          ${{ if parameters['Build_Arguments'] }}:
            arguments: $(buildArgs)
          repository: $(dockerrepo)
          tags: v$(containerversion)

      - task: Docker@2
        displayName: Push Artifact
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['newBuild'], 'True'))
        inputs:
          command: push
          repository: $(dockerrepo)
          tags: v$(containerversion)

      - task: GitHubRelease@0
        displayName: Tag release info in GitHub
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['newBuild'], 'True'))
        inputs:
          gitHubConnection: GitHub
          repositoryName: '$(Build.Repository.Name)'
          tagSource: manual
          tag: v$(containerversion)
          releaseNotesSource: 'input'
          releaseNotes: 'App Version: $(containerversion)
          Nano Version: $(versionNano)'
          addChangeLog: true